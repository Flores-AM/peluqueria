const firebaseConfig={apiKey:"AIzaSyBFYeM1-ZmdTwKUS4hLjx4pyBcryxdyTYU",authDomain:"peluqueria-2d648.firebaseapp.com",projectId:"peluqueria-2d648",storageBucket:"peluqueria-2d648.appspot.com",messagingSenderId:"115281106854",appId:"1:115281106854:web:309315fc966472f4892167"};window.brevoConfig={senderEmail:"agustinmatiasf@gmail.com",senderName:"Esvelta Peluquería",adminEmail:"agustinmatias62@gmail.com"},firebase.apps.length||firebase.initializeApp(firebaseConfig),window.firebaseAuth=firebase.auth(),window.db=firebase.firestore(),window.googleProvider=new firebase.auth.GoogleAuthProvider,window.googleProvider.addScope("profile"),window.googleProvider.addScope("email"),(()=>{if(!firebase.apps.length)throw new Error("Firebase no está inicializado");const{db:e}=window;window.firestoreDB={async obtenerConfiguracion(){const o=await e.collection("config").doc("horarios").get();if(!o.exists)throw new Error("No se encontró configuración");const r=o.data();if("string"==typeof r.horarioApertura&&(r.horarioApertura=r.horarioApertura.replace(/"/g,"")),"string"==typeof r.horarioCierre&&(r.horarioCierre=r.horarioCierre.replace(/"/g,"")),Array.isArray(r.diasLaborales)){if(1===r.diasLaborales.length&&"string"==typeof r.diasLaborales[0])try{r.diasLaborales=JSON.parse(r.diasLaborales[0])}catch(e){console.error("Error parseando diasLaborales:",e),r.diasLaborales=[1,2,3,4,5]}}else"string"==typeof r.diasLaborales&&(r.diasLaborales=r.diasLaborales.split(",").map(Number).filter(e=>!isNaN(e)));if("string"==typeof r.diasNoLaborables)try{r.diasNoLaborables=JSON.parse(r.diasNoLaborables)}catch(e){r.diasNoLaborables=r.diasNoLaborables.replace(/[\[\]\s]/g,"").split(",").filter(Boolean)}return r},obtenerTurnosPorFecha:async o=>(await e.collection("turnos").where("fecha","==",o).get()).docs.map(e=>e.data()),async generarHorariosDisponibles(e){const[o,r]=await Promise.all([this.obtenerConfiguracion(),this.obtenerTurnosPorFecha(e)]),t=r.map(e=>e.horario);return this._generarHorarios(o,t,e)},_generarHorarios(e,o,r){const t=e.horarioApertura,a=e.horarioCierre,n=parseInt(t.replace(".",":").split(":")[0]),i=parseInt(t.replace(".",":").split(":")[1]||0),s=parseInt(a.replace(".",":").split(":")[0]),l=parseInt(a.replace(".",":").split(":")[1]||0),c=e.duracionTurno;if(isNaN(n))throw new Error("Horario apertura inválido");if(isNaN(i)&&(i=0),isNaN(s))throw new Error("Horario cierre inválido");if(isNaN(l)&&(l=0),isNaN(c))throw new Error("Duración turno inválida");const d=[];let u=n,m=i;for(;u<s||u===s&&m<=l;){const e=`${u.toString().padStart(2,"0")}:${m.toString().padStart(2,"0")}`;d.push({hora:e,disponible:!o.includes(e)}),m+=c,m>=60&&(u+=Math.floor(m/60),m%=60)}if(0===d.length)throw console.error("No se generaron horarios con la configuración:",e),new Error("No se pudieron generar horarios");return d},async verificarDisponibilidad(o,r){try{return(await e.collection("turnos").where("fecha","==",o).where("horario","==",r).limit(1).get()).empty}catch(t){if(console.error("Error verificando disponibilidad:",t),"failed-precondition"===t.code){return!(await e.collection("turnos").where("fecha","==",o).get()).docs.some(e=>e.data().horario===r)}throw t}},async obtenerTurnosSolapados(o,r,t){const[a,n]=r.split(":"),i=parseInt(a),s=parseInt(n)+t,l=s%60,c=`${(i+Math.floor(s/60)).toString().padStart(2,"0")}:${l.toString().padStart(2,"0")}`;return(await e.collection("turnos").where("fecha","==",o).where("horario",">=",r).where("horario","<",c).get()).docs.map(e=>e.data())},bloquearTurnoTemporal:async(o,r,t)=>(await e.collection("bloqueos_temporales").add({fecha:o,horario:r,userId:t,timestamp:firebase.firestore.FieldValue.serverTimestamp(),expiresAt:new Date(Date.now()+3e5)})).id,async eliminarBloqueoTemporal(o){await e.collection("bloqueos_temporales").doc(o).delete()},async guardarTurno(o){try{return{id:(await e.collection("turnos").add({...o,estado:"pendiente",createdAt:firebase.firestore.FieldValue.serverTimestamp(),actualizadoEl:firebase.firestore.FieldValue.serverTimestamp()})).id,...o}}catch(e){throw console.error("Error guardando turno:",e),e}}}})();const ADMIN_UID="lnYDaOVZYOZLi9GyDdomUOZBf5p1",elements={authContainer:document.getElementById("auth-container"),adminPanel:document.getElementById("admin-panel"),loginBtn:document.getElementById("btn-admin-login"),logoutBtn:document.getElementById("logout-btn"),calendar:document.getElementById("calendar"),turnosList:document.getElementById("turnos-list"),fechaTitulo:document.getElementById("fecha-titulo"),modalEditar:document.getElementById("modal-editar"),formEditar:document.getElementById("form-editar"),btnEliminar:document.querySelector(".btn-eliminar"),btnEliminarModal:document.getElementById("btn-eliminar-modal"),closeModal:document.querySelector(".close-modal")};let calendar,currentTurnoId=null;async function verificarFirestore(){try{const e=await obtenerConfiguracion();return console.log("Configuración cargada correctamente:",e),!0}catch(e){return console.error("Error conectando con Firestore:",e),alert("Error al conectar con la base de datos. Recargando..."),setTimeout(()=>location.reload(),3e3),!1}}async function initAdmin(){if(!await verificarFirestore())return;if(!elements.authContainer)return;firebase.auth().onAuthStateChanged(handleAuthState),elements.loginBtn&&elements.loginBtn.addEventListener("click",signInWithGoogle),elements.logoutBtn&&elements.logoutBtn.addEventListener("click",signOut),elements.closeModal&&elements.closeModal.addEventListener("click",()=>{elements.modalEditar.style.display="none"}),elements.formEditar&&elements.formEditar.addEventListener("submit",async e=>{e.preventDefault(),await guardarCambiosTurno()});const e=document.getElementById("btn-eliminar-modal");e&&(e.onclick=null),window.addEventListener("click",e=>{e.target===elements.modalEditar&&(elements.modalEditar.style.display="none")})}async function obtenerConfiguracion(){try{const e=await db.collection("config").doc("horarios").get();if(!e.exists)return obtenerConfiguracionPorDefecto();const o=e.data(),r=(e=>{if(!e)return[1,2,3,4,5];if(Array.isArray(e)&&1===e.length&&"string"==typeof e[0])try{return JSON.parse(e[0].replace(/'/g,'"')).map(Number)}catch(e){console.warn("Error parseando array con string JSON",e)}if("string"==typeof e&&e.startsWith("["))try{return JSON.parse(e.replace(/'/g,'"')).map(Number)}catch(e){console.warn("Error parseando string JSON",e)}return Array.isArray(e)?e.map(Number):"string"==typeof e?e.split(",").map(Number).filter(e=>!isNaN(e)):[1,2,3,4,5]})(o.diasLaborales).filter(e=>e>=0&&e<=6).sort((e,o)=>e-o);return{horarioApertura:o.horarioApertura||"09:00",horarioCierre:o.horarioCierre||"19:00",duracionTurno:o.duracionTurno||30,diasLaborales:r.length>0?r:[1,2,3,4,5]}}catch(e){return console.error("Error obteniendo configuración:",e),obtenerConfiguracionPorDefecto()}}function obtenerConfiguracionPorDefecto(){return{horarioApertura:"09:00",horarioCierre:"19:00",duracionTurno:30,diasLaborales:[1,2,3,4,5]}}function validarHorario(e,o){const[r,t]=e.split(":").map(Number),a=60*r+t,[n,i]=o.horarioApertura.split(":").map(Number),[s,l]=o.horarioCierre.split(":").map(Number);return a<60*n+i||a>=60*s+l?{valido:!1,mensaje:`El horario debe estar entre ${o.horarioApertura} y ${o.horarioCierre}`}:t%o.duracionTurno!==0?{valido:!1,mensaje:`Los turnos deben ser en intervalos de ${o.duracionTurno} minutos (ej: 09:00, 09:30, etc.)`}:{valido:!0}}async function handleAuthState(e){e&&e.uid===ADMIN_UID?(await showAdminPanel(),await initCalendar(),await loadTurnosForDate((new Date).toISOString().split("T")[0])):showLoginScreen()}async function showAdminPanel(){elements.authContainer&&(elements.authContainer.style.display="none"),elements.adminPanel&&(elements.adminPanel.style.display="block")}function showLoginScreen(){elements.authContainer&&(elements.authContainer.style.display="flex"),elements.adminPanel&&(elements.adminPanel.style.display="none"),calendar&&calendar.destroy()}async function signInWithGoogle(){try{const e=new firebase.auth.GoogleAuthProvider;await firebase.auth().signInWithPopup(e)}catch(e){console.error("Error de autenticación:",e),alert("Error al iniciar sesión: "+e.message)}}async function signOut(){try{await firebase.auth().signOut()}catch(e){console.error("Error al cerrar sesión:",e)}}async function initCalendar(){elements.calendar&&(calendar=new FullCalendar.Calendar(elements.calendar,{initialView:"dayGridMonth",locale:"es",headerToolbar:{left:"prev,next today",center:"title",right:"none"},selectable:!0,selectMirror:!0,dayMaxEvents:!0,selectOverlap:!1,dateClick:async function(e){document.querySelectorAll(".fc-daygrid-day-selected").forEach(e=>{e.classList.remove("fc-daygrid-day-selected")}),e.dayEl.classList.add("fc-daygrid-day-selected"),await loadTurnosForDate(e.dateStr)},events:async function(e,o,r){try{const r=await db.collection("turnos").where("fecha",">=",e.startStr).where("fecha","<=",e.endStr).get();o(r.docs.map(e=>{const o=e.data();return{id:e.id,title:`${o.cliente} - ${o.servicios.join(", ")}`,start:`${o.fecha}T${o.horario}`,allDay:!1,extendedProps:{cliente:o.cliente,telefono:o.telefono,email:o.email,servicios:o.servicios,observaciones:o.observaciones,estado:o.estado||"pendiente"},className:`fc-event-${o.estado||"pendiente"}`,borderColor:"transparent"}}))}catch(e){console.error("Error cargando eventos:",e),r(e)}},eventClick:function(e){abrirModalEdicion(e.event)},select:function(e){calendar.unselect()},dayMaxEventRows:!1,views:{dayGridMonth:{dayMaxEventRows:!1,displayEventTime:!1},timeGridWeek:{dayMaxEventRows:!0},timeGridDay:{dayMaxEventRows:!0}},viewDidMount:function(){document.querySelectorAll(".fc-daygrid-day-selected").forEach(e=>{e.classList.remove("fc-daygrid-day-selected")})}}),calendar.render())}function getEventColor(e){switch(e){case"confirmado":return"#4CAF50";case"cancelado":return"#F44336";case"completado":return"#2196F3";default:return"#FF9800"}}async function loadTurnosForDate(e){try{const o=new Date(e),r=new Date(o.getTime()+6e4*o.getTimezoneOffset()),t={weekday:"long",year:"numeric",month:"long",day:"numeric"};elements.fechaTitulo.textContent=`Turnos para ${r.toLocaleDateString("es-AR",t)}`;renderTurnos((await db.collection("turnos").where("fecha","==",e).orderBy("horario","asc").get()).docs.map(e=>({id:e.id,...e.data()})))}catch(e){console.error("Error cargando turnos:",e),elements.turnosList.innerHTML="<p>Error al cargar los turnos. Intente nuevamente.</p>"}}function renderTurnos(e){elements.turnosList&&(0!==e.length?(elements.turnosList.innerHTML=e.map(e=>`\n    <div class="turno-card" data-id="${e.id}">\n      <div class="turno-header" data-id="${e.id}">\n        <div class="turno-sumario">\n          <span class="turno-horario">${e.horario}</span>\n          <span class="turno-cliente">${e.cliente}</span>\n          <span class="turno-estado ${e.estado||"pendiente"}">${e.estado||"pendiente"}</span>\n        </div>\n        <span class="toggle-icon">▼</span>\n      </div>\n      <div class="turno-detalles">\n        <div class="turno-info">\n          <p><strong>Servicios:</strong> ${e.servicios.join(", ")}</p>\n          <p><strong>Teléfono:</strong> ${e.telefono}</p>\n          <p><strong>Email:</strong> ${e.email}</p>\n          ${e.observaciones?`<p><strong>Observaciones:</strong> ${e.observaciones}</p>`:""}\n        </div>\n        <div class="turno-actions">\n          <button class="btn-editar" data-id="${e.id}">Editar</button>\n          <button class="btn-eliminar-lista" data-id="${e.id}">Eliminar</button>\n        </div>\n      </div>\n    </div>\n  `).join(""),document.querySelectorAll(".turno-header").forEach(e=>{e.addEventListener("click",function(e){if("BUTTON"===e.target.tagName)return;const o=this.closest(".turno-card"),r=o.querySelector(".turno-detalles"),t=this.querySelector(".toggle-icon");o.classList.toggle("expanded"),r.style.display=o.classList.contains("expanded")?"block":"none",t.textContent=o.classList.contains("expanded")?"▲":"▼"})}),document.querySelectorAll(".btn-eliminar-lista").forEach(e=>{e.addEventListener("click",async e=>{e.stopPropagation();const o=e.currentTarget.getAttribute("data-id");if(confirm("¿Estás seguro de eliminar este turno?")){const e=mostrarLoading();try{await eliminarTurno(o);const e=(new Date).toISOString().split("T")[0];await loadTurnosForDate(e)}catch(e){console.error("Error eliminando desde lista:",e),alert("Error al eliminar el turno")}finally{e.remove()}}})}),document.querySelectorAll(".btn-editar").forEach(e=>{e.addEventListener("click",async e=>{e.stopPropagation();const o=e.currentTarget.getAttribute("data-id");await abrirModalEdicionPorId(o)})})):elements.turnosList.innerHTML='<p class="sin-turnos">No hay turnos para esta fecha.</p>')}async function abrirModalEdicion(e){try{const o=await obtenerConfiguracion();await generarOpcionesHorario(o),currentTurnoId=e.id,document.getElementById("turno-id").value=e.id,document.getElementById("edit-fecha").value=e.start.toISOString().split("T")[0];const r=e.start.getHours().toString().padStart(2,"0"),t=e.start.getMinutes().toString().padStart(2,"0");document.getElementById("edit-horario").value=`${r}:${t}`,document.getElementById("turno-info").innerHTML=`\n      <p><strong>Cliente:</strong> ${e.extendedProps.cliente}</p>\n      <p><strong>Servicios:</strong> ${e.extendedProps.servicios.join(", ")}</p>\n      <p><strong>Teléfono:</strong> ${e.extendedProps.telefono}</p>\n      <p><strong>Estado:</strong> ${e.extendedProps.estado||"pendiente"}</p>\n    `,elements.modalEditar.style.display="block"}catch(e){console.error("Error abriendo modal de edición:",e),alert("Error al cargar los datos del turno")}}async function abrirModalEdicionPorId(e){try{const o=await obtenerConfiguracion();await generarOpcionesHorario(o);const r=await db.collection("turnos").doc(e).get();if(!r.exists)return void alert("Turno no encontrado");const t=r.data();currentTurnoId=e,document.getElementById("turno-id").value=e,document.getElementById("edit-fecha").value=t.fecha,document.getElementById("edit-horario").value=t.horario,document.getElementById("turno-info").innerHTML=`\n      <p><strong>Cliente:</strong> ${t.cliente}</p>\n      <p><strong>Servicios:</strong> ${Array.isArray(t.servicios)?t.servicios.join(", "):t.servicios}</p>\n      <p><strong>Teléfono:</strong> ${t.telefono}</p>\n      <p><strong>Estado:</strong> ${t.estado||"pendiente"}</p>\n    `;const a=document.getElementById("btn-eliminar-modal");a&&(a.onclick=async e=>{if(e.stopPropagation(),e.preventDefault(),confirm("¿Estás seguro de eliminar este turno permanentemente?"))try{await eliminarTurno(currentTurnoId)&&(await loadTurnosForDate(t.fecha),calendar.refetchEvents(),elements.modalEditar.style.display="none",alert("Turno eliminado correctamente"))}catch(e){console.error("Error al eliminar turno:",e),alert("Error al eliminar el turno: "+e.message)}}),elements.modalEditar.style.display="block"}catch(e){console.error("Error abriendo modal de edición:",e),alert("Error al cargar los datos del turno")}}function configurarModalEliminar(){const e=document.getElementById("btn-eliminar-modal");e&&(e.onclick=null,e.onclick=async e=>{if(e.preventDefault(),e.stopPropagation(),currentTurnoId){if(confirm("¿Estás seguro de eliminar este turno permanentemente?")){const e=mostrarLoading();try{await eliminarTurno(currentTurnoId)}catch(e){console.error("Error en eliminación:",e)}finally{e.remove()}}}else console.error("No hay turno seleccionado")})}function mostrarLoading(){const e=document.createElement("div");return e.className="loading-indicator",e.textContent="Procesando...",document.body.appendChild(e),e}async function generarOpcionesHorario(e){const o=document.getElementById("edit-horario");o.innerHTML="";const[r,t]=e.horarioApertura.split(":").map(Number),[a,n]=e.horarioCierre.split(":").map(Number);let i=r,s=t;for(;i<a||i===a&&s<n;){const r=i.toString().padStart(2,"0"),t=s.toString().padStart(2,"0"),a=document.createElement("option");a.value=`${r}:${t}`,a.textContent=`${r}:${t}`,o.appendChild(a),s+=e.duracionTurno,s>=60&&(i+=Math.floor(s/60),s%=60)}}async function verificarDisponibilidad(e,o,r=null){try{const t=await obtenerConfiguracion(),[a,n]=o.split(":").map(Number),i=60*a+n,s=i+t.duracionTurno;Math.floor(s/60).toString().padStart(2,"0"),(s%60).toString().padStart(2,"0");let l=db.collection("turnos").where("fecha","==",e);const c=(await l.get()).docs.filter(e=>{if(r&&e.id===r)return!1;const o=e.data(),[a,n]=o.horario.split(":").map(Number),l=60*a+n,c=l+t.duracionTurno;return i<c&&s>l});return{disponible:0===c.length,mensaje:c.length>0?"El horario se solapa con otro turno existente":null}}catch(e){return console.error("Error verificando disponibilidad:",e),{disponible:!1,mensaje:"Error al verificar disponibilidad"}}}async function guardarCambiosTurno(){if(currentTurnoId)try{const e=firebase.auth().currentUser;if(!e||e.uid!==ADMIN_UID)return void alert("No tienes permisos para realizar esta acción");const o=await obtenerConfiguracion(),r=document.getElementById("edit-horario").value,t=document.getElementById("edit-fecha").value;console.log("Validando turno para:",t,r),console.log("Configuración actual:",o);const a=validarHorario(r,o);if(!a.valido)return void alert(a.mensaje);const[n,i,s]=t.split("-").map(Number),l=new Date(n,i-1,s).getDay();if(console.log("Fecha seleccionada:",t),console.log("Día de la semana calculado:",l),console.log("Días laborales configurados:",o.diasLaborales),!o.diasLaborales.includes(l)){return void alert(`No se pueden agendar turnos los ${["Domingo","Lunes","Martes","Miércoles","Jueves","Viernes","Sábado"][l]}s`)}const c=await verificarDisponibilidad(t,r,currentTurnoId);if(!c.disponible)return void alert(c.mensaje);const d={fecha:t,horario:r,actualizadoEl:firebase.firestore.FieldValue.serverTimestamp()};await db.collection("turnos").doc(currentTurnoId).update(d),await loadTurnosForDate(t),calendar&&calendar.refetchEvents(),elements.modalEditar.style.display="none",alert("Turno actualizado correctamente")}catch(e){console.error("Error actualizando turno:",e),alert("Error al actualizar el turno: "+e.message)}else console.error("currentTurnoId no definido")}async function eliminarTurno(e){if(!e||"string"!=typeof e)return console.error("ID de turno inválido:",e),!1;try{console.log("Iniciando eliminación para ID:",e);const o=await db.collection("turnos").doc(e).get();if(!o.exists)return alert("El turno ya no existe"),!1;const r=o.data().fecha;return await db.collection("turnos").doc(e).delete(),console.log("Turno eliminado con éxito"),await loadTurnosForDate(r),calendar&&calendar.refetchEvents(),elements.modalEditar&&(elements.modalEditar.style.display="none"),!0}catch(e){throw console.error("Error al eliminar:",e),alert("Error al eliminar el turno: "+(e.message||"Por favor intente nuevamente")),e}}function setupModalEvents(){const e=document.getElementById("modal-editar"),o=document.getElementById("btn-eliminar-modal");o&&(o.onclick=async o=>{if(o.stopPropagation(),o.preventDefault(),currentTurnoId){if(confirm("¿Estás seguro de eliminar este turno permanentemente?"))try{if(await eliminarTurno(currentTurnoId)){const o=(new Date).toISOString().split("T")[0];await loadTurnosForDate(o),calendar.refetchEvents(),e.style.display="none",alert("Turno eliminado correctamente")}}catch(e){console.error("Error en el proceso de eliminación:",e),alert("Error al eliminar el turno: "+(e.message||"Por favor intente nuevamente"))}}else console.error("No hay turno seleccionado")})}document.addEventListener("DOMContentLoaded",initAdmin),window.enviarEmailConfirmacion=async e=>{try{const o={senderName:window.brevoConfig.senderName,senderEmail:window.brevoConfig.senderEmail,to:[{email:e.email,name:e.nombre}],subject:`Confirmación de turno - ${e.fecha} a las ${e.horario}`,htmlContent:`\n          <!DOCTYPE html>\n          <html>\n          <head>\n              <style>\n                  body { font-family: 'Poppins', sans-serif; line-height: 1.6; color: #333; }\n                  .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n                  .header { background-color: #f8f1e9; padding: 20px; text-align: center; }\n                  .content { padding: 20px; }\n                  .footer { text-align: center; font-size: 12px; color: #777; margin-top: 20px; }\n                  .resumen { margin-top: 20px; border-top: 1px solid #eee; padding-top: 20px; }\n                  .servicio { margin-bottom: 5px; }\n              </style>\n          </head>\n          <body>\n              <div class="container">\n                  <div class="header">\n                      <h2>Esvelta Peluquería</h2>\n                      <p>¡Tu turno ha sido confirmado!</p>\n                  </div>\n                  \n                  <div class="content">\n                      <p>Hola <strong>${e.nombre}</strong>,</p>\n                      <p>Tu turno ha sido reservado con éxito. A continuación los detalles:</p>\n                      \n                      <div class="resumen">\n                          <h3>Resumen de tu reserva</h3>\n                          <p><strong>Fecha:</strong> ${e.fecha}</p>\n                          <p><strong>Hora:</strong> ${e.horario}</p>\n                          <p><strong>Servicios:</strong></p>\n                          <ul>\n                              ${e.servicios.map(e=>`<li class="servicio">${e}</li>`).join("")}\n                          </ul>\n                          <p><strong>Seña abonada:</strong> $${e.reserva.toLocaleString()}</p>\n                          <p><strong>Saldo pendiente:</strong> $${(e.montoTotal-e.reserva).toLocaleString()}</p>\n                      </div>\n                      \n                      <p>Si necesitas modificar o cancelar tu turno, por favor contáctanos respondiendo este email.</p>\n                  </div>\n                  \n                  <div class="footer">\n                      <p>© ${(new Date).getFullYear()} Esvelta Peluquería. Todos los derechos reservados.</p>\n                  </div>\n              </div>\n          </body>\n          </html>\n        `};window.brevoConfig.adminEmail&&(o.bcc=[{email:window.brevoConfig.adminEmail,name:"Administrador Esvelta"}]);const r=firebase.functions().httpsCallable("enviarEmailConfirmacion");return(await r(o)).data.success}catch(e){return console.error("Error en enviarEmailConfirmacion:",e),!1}};let pasoActual=1;const totalPasos=5;let datosReserva={servicios:[],precios:{Corte:15e3,"Teñido":4e4,Alisado:3e4},reserva:5e3,fecha:null,horario:null,nombre:null,email:null,telefono:null,observacion:null},usuarioActual=null;const elementos={progreso:document.getElementById("progreso"),btnAnterior:document.querySelector(".btn-anterior"),btnSiguiente:document.querySelector(".btn-siguiente"),pasos:document.querySelectorAll(".paso"),resumenNombre:document.getElementById("cliente-nombre"),resumenEmail:document.getElementById("cliente-email"),resumenTelefono:document.getElementById("cliente-telefono"),resumenServicio:document.getElementById("servicio-seleccionado"),resumenFecha:document.getElementById("fecha-seleccionada"),resumenHorario:document.getElementById("horario-seleccionado"),resumenObservacion:document.getElementById("observacion-texto")},auth=window.firebaseAuth||{onAuthStateChanged:()=>console.warn("Auth no inicializado")};async function probarConexion(){try{console.log("Probando conexión a Firestore...");const e=await firestoreDB.obtenerConfiguracion();console.log("Configuración obtenida:",e);const o=(new Date).toISOString().split("T")[0],r=await firestoreDB.obtenerTurnosPorFecha(o);console.log(`Turnos para hoy (${o}):`,r);const t=await firestoreDB.generarHorariosDisponibles(o);console.log("Horarios disponibles hoy:",t)}catch(e){console.error("Error en prueba de conexión:",e)}}function mostrarError(e){const o=document.createElement("div");o.className="error-global",o.innerHTML=`\n    <svg viewBox="0 0 24 24" width="24" height="24">\n      <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z"/>\n    </svg>\n    <span>${e}</span>\n  `,document.body.appendChild(o),setTimeout(()=>o.remove(),5e3)}function inicializarEventos(){elementos.btnAnterior.addEventListener("click",retrocederPaso),elementos.btnSiguiente.addEventListener("click",avanzarPaso),document.querySelectorAll(".flotante.servicio").forEach(e=>{e.addEventListener("click",function(){this.classList.toggle("seleccionado"),actualizarServiciosSeleccionados()})}),document.querySelectorAll(".flotante.fecha").forEach(e=>{e.addEventListener("click",function(){seleccionarElemento(this,"fecha")})}),document.querySelectorAll(".flotante.horario").forEach(e=>{e.addEventListener("click",async function(){if(!this.classList.contains("ocupado")){const e=this.querySelector(".p1").textContent,o=await validarDisponibilidadCompleta(datosReserva.fecha,e);o.disponible&&0===o.turnosSolapados.length?seleccionarElemento(this,"horario"):mostrarError(o.mensaje||"Horario no disponible")}})}),document.getElementById("nombre")?.addEventListener("input",validarNombre),document.getElementById("email")?.addEventListener("input",validarEmail),document.getElementById("telefono")?.addEventListener("input",validarTelefono)}function calcularSubtotal(){const e=datosReserva.servicios.reduce((e,o)=>e+o.precio,0);return document.getElementById("subtotal").textContent=`$${e.toLocaleString()}`,e}function actualizarServiciosSeleccionados(){const e=document.querySelectorAll(".flotante.servicio.seleccionado");datosReserva.servicios=Array.from(e).map(e=>({nombre:e.getAttribute("data-servicio"),precio:datosReserva.precios[e.getAttribute("data-servicio")]})),document.getElementById("contador-servicios").textContent=datosReserva.servicios.length,datosReserva.servicios.length>0&&document.getElementById("error-servicio").classList.remove("visible"),calcularSubtotal()}async function avanzarPaso(){if(!(pasoActual>=5))try{if(!validarPaso(pasoActual))return;4===pasoActual&&(guardarDatosFormulario(),actualizarResumen()),pasoActual++,actualizarInterfaz(),4===pasoActual&&usuarioActual&&autocompletarFormulario(usuarioActual)}catch(e){console.error("Error al avanzar paso:",e)}}function retrocederPaso(){pasoActual>1&&(pasoActual--,actualizarInterfaz())}function actualizarInterfaz(){actualizarPasos(),actualizarProgreso(),actualizarBotones()}async function simularReserva(){if(5===pasoActual){const e=await validarDisponibilidadCompleta(datosReserva.fecha,datosReserva.horario);if(!e.disponible||e.turnosSolapados.length>0)return void mostrarError(e.mensaje||"El horario ya no está disponible");try{if(!await firestoreDB.verificarDisponibilidad(datosReserva.fecha,datosReserva.horario))return void mostrarConfirmacion(!1);const e={cliente:datosReserva.nombre,email:datosReserva.email,telefono:datosReserva.telefono,servicios:datosReserva.servicios.map(e=>e.nombre),fecha:datosReserva.fecha,horario:datosReserva.horario,montoTotal:calcularSubtotal(),reserva:datosReserva.reserva,observaciones:datosReserva.observacion||"",userId:usuarioActual?.uid||null};await firestoreDB.guardarTurno(e),enviarEmailConfirmacion({...e,nombre:datosReserva.nombre,servicios:datosReserva.servicios.map(e=>e.nombre)}).then(e=>{e||console.log("El email no pudo enviarse, pero el turno fue reservado")}),mostrarConfirmacion(!0)}catch(e){console.error("Error al reservar:",e),mostrarConfirmacion(!1)}}}async function completarReserva(){let e=null;try{e=await firestoreDB.bloquearTurnoTemporal(datosReserva.fecha,datosReserva.horario,usuarioActual?.uid||"anonimo");const o=await firestoreDB.obtenerConfiguracion(),[r,t]=await Promise.all([firestoreDB.verificarDisponibilidad(datosReserva.fecha,datosReserva.horario),firestoreDB.obtenerTurnosSolapados(datosReserva.fecha,datosReserva.horario,o.duracionTurno)]);if(!r||t.length>0)return await firestoreDB.eliminarBloqueoTemporal(e),void mostrarError(t.length>0?`El horario se solapa con un turno existente (${t[0].servicios.join(", ")})`:"El horario ya fue reservado");const a={};await firestoreDB.guardarTurno(a),await firestoreDB.eliminarBloqueoTemporal(e),mostrarConfirmacion(!0)}catch(o){console.error("Error en reserva:",o),e&&await firestoreDB.eliminarBloqueoTemporal(e).catch(e=>console.error("Error limpiando bloqueo:",e)),mostrarConfirmacion(!1)}}async function inicializarDisponibilidad(){try{const e=await firestoreDB.obtenerConfiguracion();console.log("Configuración procesada:",{apertura:e.horarioApertura,cierre:e.horarioCierre,diasLaborales:e.diasLaborales,diasNoLaborables:e.diasNoLaborables});const o=generarFechasDisponibles(e);console.log("Fechas generadas:",o),actualizarUIFechas(o)}catch(e){console.error("Error inicializando disponibilidad:",e),mostrarError("No se pudieron cargar las fechas disponibles")}}async function validarDisponibilidadCompleta(e,o){try{const r=await firestoreDB.obtenerConfiguracion(),[t,a]=await Promise.all([firestoreDB.verificarDisponibilidad(e,o),firestoreDB.obtenerTurnosSolapados(e,o,r.duracionTurno)]);return{disponible:t,turnosSolapados:a,mensaje:a.length>0?`El horario se solapa con ${a.length} turno(s) existente(s)`:null}}catch(e){return console.error("Error en validación:",e),{disponible:!1,turnosSolapados:[],mensaje:"Error al verificar disponibilidad"}}}function generarFechasDisponibles(e){const o=new Date((new Date).toLocaleString("en-US",{timeZone:"America/Argentina/Buenos_Aires"})),r=new Date(o.getFullYear(),o.getMonth(),o.getDate()),[t,a]=e.horarioCierre.split(":").map(Number),n=o.getHours()>t||o.getHours()===t&&o.getMinutes()>=a,i=[],s=n?1:0;for(let o=s;o<7+s;o++){const t=new Date(r);if(t.setDate(r.getDate()+o),!esDiaLaboral(t,e)){console.log(`Saltando ${t.toDateString()} - No es día laboral`);continue}const a=t.toISOString().split("T")[0];Array.isArray(e.diasNoLaborables)&&e.diasNoLaborables.includes(a)?console.log(`Saltando ${a} - Día no laborable configurado`):0===o&&n||i.push({fecha:a,display:formatearFechaDisplay(t)})}return console.log("Fechas disponibles generadas:",i),i}function esDiaLaboral(e,o){const r=e.getDay();let t=[];try{Array.isArray(o.diasLaborales)?t=o.diasLaborales.map(Number).filter(e=>!isNaN(e)):"string"==typeof o.diasLaborales&&(t=o.diasLaborales.split(",").map(Number).filter(e=>!isNaN(e)))}catch(e){console.error("Error procesando días laborales:",e),t=[1,2,3,4,5]}return 0===t.length&&(t=[1,2,3,4,5]),t.includes(r)}function formatearFechaDisplay(e){return e.toLocaleDateString("es-AR",{weekday:"long",day:"numeric",month:"short"})}function obtenerFechaSeleccionada(){if(!datosReserva.fecha)return(new Date).toISOString().split("T")[0];const e=datosReserva.fecha.split(" "),[o,r]=e[1].split("/");return`${(new Date).getFullYear()}-${r.padStart(2,"0")}-${o.padStart(2,"0")}`}function actualizarUIFechas(e){const o=document.querySelector(".paso-2");if(!o)return void console.error("No se encontró el contenedor del paso 2");const r=o.querySelector(".contenedor-fechas"),t=o.querySelector(".flotante.fecha"),a=o.querySelector(".cargando-fechas"),n=o.querySelector(".sin-fechas");a&&(a.style.display="none"),n&&(n.style.display="none"),r.innerHTML="",t&&(t.style.display="none"),0!==e.length?(r.style.display="grid",e.forEach(e=>{if(!t)return;const o=t.cloneNode(!0);o.style.display="flex",o.querySelector(".p1").textContent=e.display,o.dataset.fechaReal=e.fecha,o.addEventListener("click",function(){seleccionarElemento(this,"fecha"),cargarHorariosParaFecha(e.fecha)}),r.appendChild(o)})):n&&(n.style.display="block",n.textContent="No hay fechas disponibles en este momento")}async function cargarHorariosParaFecha(e){const o=document.querySelector(".paso-3");if(!o)return;const r=o.querySelector(".contenedor-horarios"),t=o.querySelector(".sin-horarios");r&&(r.innerHTML=""),t&&(t.style.display="none");const a=o.querySelector(".cargando-horarios");a&&(a.style.display="block");try{console.log("Cargando horarios para fecha:",e);let o=await firestoreDB.generarHorariosDisponibles(e);console.log("Horarios recibidos:",o);const r=new Date((new Date).toLocaleString("en-US",{timeZone:"America/Argentina/Buenos_Aires"})),t=new Date(r.getFullYear(),r.getMonth(),r.getDate());if(new Date(e+"T00:00:00-03:00").getTime()===t.getTime()){const e=60*r.getHours()+r.getMinutes(),t=30;o=o.filter(o=>{const[r,a]=o.hora.split(":").map(Number);return 60*r+a>=e+t}),console.log("Horarios filtrados para hoy:",o)}datosReserva.fecha=e,actualizarUIHorarios(o)}catch(e){console.error("Error cargando horarios:",e),t&&(t.style.display="block",t.textContent="Error al cargar horarios. Intenta nuevamente.")}finally{a&&(a.style.display="none"),r&&(r.style.display="grid")}}async function generarHorariosDisponibles(e){const[o,r]=await Promise.all([this.obtenerConfiguracion(),this.obtenerTurnosPorFecha(e)]),t=r.map(e=>e.horario),a=this._generarHorarios(o,t,e);return console.log("Horarios generados para",e,":",a),a}function actualizarUIHorarios(e){const o=document.querySelector(".paso-3");if(!o)return;const r=o.querySelector(".contenedor-horarios"),t=(o.querySelector(".flotante.horario"),o.querySelector(".sin-horarios"));r&&(r.innerHTML=""),t&&(t.style.display="none"),e&&0!==e.length?e.forEach(e=>{const o=document.createElement("div");o.className="flotante horario",o.style.display="flex";const t=document.createElement("p");t.className="p1",t.textContent=e.hora;const a=document.createElementNS("http://www.w3.org/2000/svg","svg");a.setAttribute("class","check-icon"),a.setAttribute("viewBox","0 0 24 24");const n=document.createElementNS("http://www.w3.org/2000/svg","path");n.setAttribute("d","M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"),a.appendChild(n),o.appendChild(t),o.appendChild(a),e.disponible?o.addEventListener("click",()=>{seleccionarElemento(o,"horario"),datosReserva.horario=e.hora}):o.classList.add("ocupado"),r&&r.appendChild(o)}):t&&(t.style.display="block",t.textContent="No hay horarios disponibles para esta fecha")}async function verificarDisponibilidadEnTiempoReal(e,o){try{return!!await firestoreDB.verificarDisponibilidad(e,o)||(mostrarError("Este horario ya no está disponible. Por favor selecciona otro."),document.querySelectorAll(".flotante.horario").forEach(e=>{e.textContent.trim()===o&&(e.classList.add("ocupado"),e.removeEventListener("click",manejarClickHorario))}),!1)}catch(e){return console.error("Error verificando disponibilidad:",e),!1}}function crearContenedorHorarios(e){const o=document.createElement("div");return o.className="contenedor-horarios",e.appendChild(o),o}function actualizarPasos(){elementos.pasos.forEach((e,o)=>{e.classList.toggle("activo",o+1===pasoActual)})}function actualizarProgreso(){const e=pasoActual/5*100;elementos.progreso.style.width=`${e}%`}function actualizarBotones(){1===pasoActual?elementos.btnAnterior.classList.remove("activo"):elementos.btnAnterior.classList.add("activo"),elementos.btnSiguiente.replaceWith(elementos.btnSiguiente.cloneNode(!0)),elementos.btnSiguiente=document.querySelector(".btn-siguiente"),5===pasoActual?(elementos.btnSiguiente.classList.add("btn-reserva"),elementos.btnSiguiente.textContent="Reservar",elementos.btnSiguiente.addEventListener("click",async()=>{await simularReserva()})):(elementos.btnSiguiente.classList.remove("btn-reserva"),elementos.btnSiguiente.innerHTML='\n            <svg class="flecha" viewBox="0 0 24 24" width="24" height="24">\n                <path d="M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z" fill="ffffff"/>\n            </svg>\n        ',elementos.btnSiguiente.addEventListener("click",avanzarPaso))}function seleccionarElemento(e,o){if(e.classList.contains("seleccionado")&&"servicio"===o)return e.classList.remove("seleccionado"),void actualizarServiciosSeleccionados();"servicio"===o?(e.classList.add("seleccionado"),actualizarServiciosSeleccionados()):(document.querySelectorAll(`.flotante.${o}`).forEach(e=>{e.classList.remove("seleccionado")}),e.classList.add("seleccionado"),datosReserva[o]=e.querySelector(".p1").textContent,"fecha"===o?document.getElementById("error-fecha").classList.remove("visible"):"horario"===o&&document.getElementById("error-horario").classList.remove("visible"))}function validarPaso(e){const o=document.querySelector(`.paso-${e}`);if(!o)return console.error(`Elemento del paso ${e} no encontrado`),!1;const r=o.querySelectorAll(".error-mensaje");switch(r&&r.forEach(e=>e.classList.remove("visible")),e){case 1:const e=o.querySelector("#error-servicio");return 0!==datosReserva.servicios.length||(e&&e.classList.add("visible"),!1);case 2:const r=o.querySelector("#error-fecha");return!!datosReserva.fecha||(r&&r.classList.add("visible"),!1);case 3:const t=o.querySelector("#error-horario");return!!datosReserva.horario||(t&&t.classList.add("visible"),!1);case 4:return validarFormulario();default:return!0}}function validarFormulario(){let e=!0;const o=document.getElementById("nombre").value.trim(),r=document.getElementById("email").value.trim(),t=document.getElementById("telefono").value.trim();return document.querySelectorAll(".error-mensaje").forEach(e=>{e.classList.remove("visible")}),(!o||o.length<5)&&(document.getElementById("error-nombre").classList.add("visible"),document.getElementById("nombre").classList.add("invalido"),e=!1),r&&/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(r)||(document.getElementById("error-email").classList.add("visible"),document.getElementById("email").classList.add("invalido"),e=!1),t&&/^[0-9]{10}$/.test(t)||(document.getElementById("error-telefono").classList.add("visible"),document.getElementById("telefono").classList.add("invalido"),e=!1),e}function guardarDatosFormulario(){datosReserva.nombre=document.getElementById("nombre").value.trim(),datosReserva.email=document.getElementById("email").value.trim(),datosReserva.telefono=document.getElementById("telefono").value.trim(),datosReserva.observacion=document.getElementById("observacion").value.trim()||"Ninguna"}function actualizarResumen(){elementos.resumenNombre&&(elementos.resumenNombre.textContent=datosReserva.nombre||"[No ingresado]");const e=document.getElementById("cliente-email");e&&(e.textContent=datosReserva.email||"[No ingresado]"),elementos.resumenTelefono&&(elementos.resumenTelefono.textContent=datosReserva.telefono||"[No ingresado]");const o=datosReserva.servicios.length>0?datosReserva.servicios.map(e=>`${e.nombre}`).join(", "):"Ninguno seleccionado";elementos.resumenServicio.innerHTML=o,elementos.resumenFecha.textContent=datosReserva.fecha||"[No seleccionada]",elementos.resumenHorario.textContent=datosReserva.horario||"[No seleccionado]",elementos.resumenObservacion.textContent=datosReserva.observacion;const r=calcularSubtotal(),t=Math.max(0,r-datosReserva.reserva);document.getElementById("subtotal").textContent=`$${r.toLocaleString()}`,document.getElementById("senia").textContent=`$${datosReserva.reserva.toLocaleString()}`,document.getElementById("saldo-pendiente").textContent=`$${t.toLocaleString()}`}function validarNombre(){const e=document.getElementById("nombre"),o=document.getElementById("error-nombre");e.value.trim().length>=5?(e.classList.remove("invalido"),o.classList.remove("visible")):e.classList.add("invalido")}function validarTelefono(){const e=document.getElementById("telefono"),o=document.getElementById("error-telefono");/^[0-9]{10}$/.test(e.value)?(e.classList.remove("invalido"),o.classList.remove("visible")):e.classList.add("invalido")}function validarEmail(){const e=document.getElementById("email"),o=document.getElementById("error-email");/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e.value)?(e.classList.remove("invalido"),o.classList.remove("visible")):e.classList.add("invalido")}async function mostrarConfirmacion(e){elementos.pasos.forEach(e=>e.classList.remove("activo"));const o=document.querySelector(".paso-6");o.classList.add("activo");if(e){const e=datosReserva.servicios.reduce((e,o)=>e+o.precio,0),o=Math.max(0,e-datosReserva.reserva);document.querySelector(".paso-6 .exito").innerHTML=`\n            \n      <svg class="confirmacion-icono" viewBox="0 0 24 24">\n        <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>\n      </svg>\n    \n            <h2>¡Turno reservado!</h2>\n            <p>Nos vemos en la pelu. Recibirás un email de confirmación.</p>\n            <div class="resumen-confirmacion">\n                <h3>Resumen de tu reserva</h3>\n                <p><strong>Servicios:</strong> ${datosReserva.servicios.map(e=>e.nombre).join(", ")}</p>\n                <p><strong>Fecha:</strong> ${datosReserva.fecha}</p>\n                <p><strong>Hora:</strong> ${datosReserva.horario}</p>\n                <p><strong>Seña abonada:</strong> $${datosReserva.reserva.toLocaleString()}</p>\n                <p class="total-confirmacion">Saldo pendiente: $${o.toLocaleString()}</p>\n            </div>\n        `,document.querySelector(".paso-6 .exito").classList.add("visible"),document.querySelector(".paso-6 .error").classList.remove("visible")}else{document.querySelector(".paso-6 .error").innerHTML='\n            \n      <svg class="confirmacion-icono" viewBox="0 0 24 24">\n        <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z"/>\n      </svg>\n    \n            <h2>No se pudo realizar la reserva</h2>\n            <p>Intenta nuevamente en unos minutos.</p>\n        ',document.querySelector(".paso-6 .exito").classList.remove("visible"),document.querySelector(".paso-6 .error").classList.add("visible")}if(elementos.btnAnterior.style.display="none",elementos.btnSiguiente.style.display="none",!document.getElementById("nueva-reserva")){const r=`\n            <button id="nueva-reserva" class="btn-reserva">\n                \n      <svg viewBox="0 0 24 24">\n        <path d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"/>\n      </svg>\n    \n                ${e?"Volver":"Volver a intentar"}\n            </button>\n        `;o.insertAdjacentHTML("beforeend",r),document.getElementById("nueva-reserva").addEventListener("click",()=>{location.reload()})}}function inicializarAuth(){const e=document.querySelector("nav");e&&(document.getElementById("btn-google")||(e.innerHTML+='<button id="btn-google">Acceder</button>'),firebase.auth().onAuthStateChanged(o=>{usuarioActual=o;const r=document.getElementById("btn-google");o?(r.outerHTML=`<p class="usuario-nombre">${o.displayName}</p>`,guardarUsuario(o)):(document.getElementById("btn-google")||(e.innerHTML+='<button id="btn-google">Acceder</button>'),limpiarUsuario())}),document.querySelector("nav").addEventListener("click",async e=>{if("btn-google"===e.target.id)try{const e=new firebase.auth.GoogleAuthProvider;await firebase.auth().signInWithPopup(e)}catch(e){console.error("Error de autenticación:",e),alert("Error al iniciar sesión: "+e.message)}}))}function mostrarErrorAuth(e){let o="Error al autenticar";o="auth/popup-closed-by-user"===e.code?"El popup de autenticación fue cerrado":"auth/cancelled-popup-request"===e.code?"Solicitud de autenticación cancelada":e.message||"Error desconocido",alert(o)}function guardarUsuario(e){localStorage.setItem("usuario",JSON.stringify({uid:e.uid,nombre:e.displayName,email:e.email}))}function limpiarUsuario(){localStorage.removeItem("usuario")}function actualizarUIUsuario(e){const o=document.getElementById("btn-google");o&&(o.outerHTML='<p class="usuario-nombre"></p>',autocompletarFormulario(e))}function mostrarBotonLogin(){const e=document.querySelector("nav h1").parentElement;e.querySelector("#btn-google")||(e.innerHTML+='<button id="btn-google">Acceder</button>')}function autocompletarFormulario(e){const o=document.querySelector(".paso-4");if(!o||!o.classList.contains("activo")||!e)return;const r=document.getElementById("nombre"),t=document.getElementById("email");r&&!r.value&&(r.value=e.displayName||"",validarNombre()),t&&!t.value&&(t.value=e.email||"",validarEmail(),datosReserva.email=e.email)}window.firestoreDB||console.error("Firestore no está disponible"),document.addEventListener("DOMContentLoaded",()=>{const e=localStorage.getItem("usuario");if(e){actualizarUIUsuario(JSON.parse(e))}document.querySelector(".contenedor-pasos")&&(probarConexion(),inicializarEventos(),actualizarInterfaz(),inicializarAuth(),inicializarDisponibilidad())});
//# sourceMappingURL=bundle.min.js.map
